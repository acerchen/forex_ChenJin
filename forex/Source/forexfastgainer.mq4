/*
   Generated by EX4-TO-MQ4 decompiler LITE V4.0.409.1j [-]
   Website: https://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2012, ForexFastGainer"
#property link      ""

bool gi_76 = FALSE;
string gs_80 = "FG";
extern int magic = 20120101;
extern string MM = "MoneyManagement";
extern double Lots = 0.01;
extern bool LotsOptimized = TRUE;
extern double RiskPercent = 1.0;
extern double MinimumLotSize = 0.01;
extern double MaximumLotSize = 10.0;
extern double lotdigits = 2.0;
extern double TakeProfit = 10.0;
extern double StopLoss = 30.0;
bool gi_160 = FALSE;
extern bool HideStopLoss = FALSE;
extern bool HideTarget = TRUE;
bool gi_172 = TRUE;
bool gi_176 = FALSE;
int gi_180 = 100;
int gi_184 = 1;
int gi_188 = 0;
int gi_192 = 11;
int gi_196 = 0;
int gi_200 = 11;
int gi_204 = 0;
int gi_208 = 0;
int gi_212 = 1;
int gi_216 = 0;
int gi_220 = 0;
extern int slippage = 5;
string gs_228 = "Entry Logics";
int gi_236 = 1;
bool gi_240 = TRUE;
int gi_244 = 3;
bool gi_248 = FALSE;
int gi_252 = 12;
bool gi_256 = FALSE;
int gi_260 = 12;
bool gi_264 = FALSE;
int gi_268 = 12;
bool gi_272 = FALSE;
int gi_276 = 12;
bool gi_280 = TRUE;
int gi_284 = 12;
bool gi_288 = TRUE;
int gi_292 = 10;
bool gi_296 = FALSE;
int gi_300 = 12;
extern string TimeFilter = "Time Filter";
extern int GMTOffset = 1;
bool gi_316 = FALSE;
extern bool MondayFilter = TRUE;
extern int MondayStartHour = 14;
bool gi_328 = FALSE;
int gi_332 = 24;
bool gi_336 = FALSE;
int gi_340 = 60;
string gs_344 = "Volatility Filter";
bool gi_352 = FALSE;
bool gi_356 = FALSE;
bool gi_360 = FALSE;
bool gi_364 = FALSE;
bool gi_368 = FALSE;
bool gi_372 = TRUE;
bool gi_376 = TRUE;
bool gi_380 = FALSE;
string gs_384 = "Other Filters";
bool gi_392 = TRUE;
bool gi_396 = TRUE;
datetime gt_400;
datetime gt_404;
int gi_408;
int gi_412;
double gd_416 = 0.0;
double gd_424 = 0.0;
double gd_432 = 0.0;
double gd_440;
double gd_448;
double gd_456;
double gd_464;
double gd_488;
double gd_496;
int gi_504;
int gi_508;
int gi_512;
int gi_516;
int gi_520;
int gi_524 = -1;
int gi_528 = 0;
int gi_532;
int gi_536;
int gi_540 = 0;
int gi_544 = 0;
int gi_548 = 0;
int gi_552 = 0;
int gi_556 = 0;
int gi_560 = 0;

int init() {
   gt_400 = Time[0];
   gt_404 = Time[0];
   gi_520 = Digits;
   if (gi_520 == 3 || gi_520 == 5) {
      gd_456 = 10.0 * Point;
      gd_464 = 10;
   } else {
      gd_456 = Point;
      gd_464 = 1;
   }
   return (0);
}

int start() {
   double ld_0;
   double ld_16;
   double ld_24;
   if (gi_76) {
      ld_0 = AccountFreeMargin();
      Comment("\n", 
         "\n", 
         "\n", "...................................... ", 
         "\n", "Current Open Trade Profit/Loss is : ", AccountProfit(), 
         "\n", "...................................... ", 
         "\n", "Account Curency:", AccountCurrency(), 
         "\n", "Account free margin is ", DoubleToStr(ld_0, 2), 
         "\n", "...................................... ", 
         "\n", "High day price. ", MarketInfo(Symbol(), MODE_HIGH), 
         "\n", "Low day price.", MarketInfo(Symbol(), MODE_LOW), 
         "\n", "Currency Spread is ", MarketInfo(Symbol(), MODE_SPREAD), 
         "\n", "Current Ask Price is ", MarketInfo(Symbol(), MODE_ASK), 
         "\n", "Current Bid Price is ", MarketInfo(Symbol(), MODE_BID), 
         "\n", "Leverage 1:", AccountLeverage(), 
         "\n", "...................................... ", 
         "\n", "Account Balance:", AccountBalance(), 
         "\n", "...................................... ", 
      "\n", "Current Broker Time Is ", TimeToStr(TimeCurrent()));
   }
   gi_532 = OrdersTotal();
   if (gi_216 > 0) {
      for (int li_8 = 0; li_8 < gi_532; li_8++) {
         OrderSelect(li_8, SELECT_BY_POS, MODE_TRADES);
         if (OrderType() <= OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == magic) {
            if (OrderType() == OP_BUY) {
               if (NormalizeDouble(Bid - OrderOpenPrice(), gi_520) < NormalizeDouble(gi_216 * gd_456, gi_520)) continue;
               if (NormalizeDouble(OrderStopLoss() - OrderOpenPrice(), gi_520) >= NormalizeDouble(gi_220 * gd_456, gi_520)) continue;
               OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(OrderOpenPrice() + gi_220 * gd_456, gi_520), OrderTakeProfit(), 0, Blue);
               return (0);
            }
            if (NormalizeDouble(OrderOpenPrice() - Ask, gi_520) >= NormalizeDouble(gi_216 * gd_456, gi_520)) {
               if (NormalizeDouble(OrderOpenPrice() - OrderStopLoss(), gi_520) < NormalizeDouble(gi_220 * gd_456, gi_520)) {
                  OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(OrderOpenPrice() - gi_220 * gd_456, gi_520), OrderTakeProfit(), 0, Red);
                  return (0);
               }
            }
         }
      }
   }
   if (gi_208 > 0) {
      for (int li_12 = 0; li_12 < gi_532; li_12++) {
         OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES);
         if (OrderType() <= OP_SELL && OrderSymbol() == Symbol() && OrderMagicNumber() == magic) {
            if (OrderType() == OP_BUY) {
               if (!(NormalizeDouble(Ask, gi_520) > NormalizeDouble(OrderOpenPrice() + gi_204 * gd_456, gi_520) && NormalizeDouble(OrderStopLoss(), gi_520) < NormalizeDouble(Bid - (gi_208 +
                  gi_212) * gd_456, gi_520) || OrderStopLoss() == 0.0)) continue;
               OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(Bid - gi_208 * gd_456, gi_520), OrderTakeProfit(), 0, Blue);
               return (0);
            }
            if (NormalizeDouble(Bid, gi_520) < NormalizeDouble(OrderOpenPrice() - gi_204 * gd_456, gi_520) && NormalizeDouble(OrderStopLoss(), gi_520) > NormalizeDouble(Ask +
               (gi_208 + gi_212) * gd_456, gi_520) || OrderStopLoss() == 0.0) {
               OrderModify(OrderTicket(), OrderOpenPrice(), NormalizeDouble(Ask + gi_208 * gd_456, gi_520), OrderTakeProfit(), 0, Red);
               return (0);
            }
         }
      }
   }
   if (gi_160) {
      ld_16 = TakeProfit * (AccountBalance() / 100.0);
      ld_24 = StopLoss * (AccountBalance() / 100.0);
      gd_416 = AccountEquity() - AccountBalance();
      if (gd_416 > gd_488) gd_488 = gd_416;
      if (gd_416 < gd_496) gd_496 = gd_416;
      if (gd_416 >= ld_16 || gd_416 <= (-1.0 * ld_24)) {
         for (gi_504 = gi_532 - 1; gi_504 >= 0; gi_504--) {
            OrderSelect(gi_504, SELECT_BY_POS, MODE_TRADES);
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_BUY) OrderClose(OrderTicket(), OrderLots(), Bid, slippage * gd_456);
            if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), Ask, slippage * gd_456);
         }
         return (0);
      }
   }
   for (gi_560 = 0; gi_560 < OrdersTotal(); gi_560++) {
      OrderSelect(gi_560, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderCloseTime() == 0) {
         gi_548++;
         if (OrderType() == OP_BUY) {
            gi_540++;
            gd_424 = OrderOpenPrice();
            gi_552 = OrderProfit();
            gi_408 = OrderOpenTime();
         }
         if (OrderType() == OP_SELL) {
            gi_544++;
            gd_432 = OrderOpenPrice();
            gi_556 = OrderProfit();
            gi_412 = OrderOpenTime();
         }
      }
   }
   double ld_32 = iHigh(Symbol(), PERIOD_M1, iHighest(Symbol(), PERIOD_M1, MODE_HIGH, gi_244, gi_236 + 1));
   double ld_40 = iLow(Symbol(), PERIOD_M1, iLowest(Symbol(), PERIOD_M1, MODE_LOW, gi_244, gi_236 + 1));
   double ld_48 = iHigh(Symbol(), PERIOD_M1, iHighest(Symbol(), PERIOD_M1, MODE_HIGH, gi_244, gi_236));
   double ld_56 = iLow(Symbol(), PERIOD_M1, iLowest(Symbol(), PERIOD_M1, MODE_LOW, gi_244, gi_236));
   double ld_64 = iHigh(Symbol(), PERIOD_M5, iHighest(Symbol(), PERIOD_M5, MODE_HIGH, gi_252, gi_236 + 1));
   double ld_72 = iLow(Symbol(), PERIOD_M5, iLowest(Symbol(), PERIOD_M5, MODE_LOW, gi_252, gi_236 + 1));
   double ld_80 = iHigh(Symbol(), PERIOD_M5, iHighest(Symbol(), PERIOD_M5, MODE_HIGH, gi_252, gi_236));
   double ld_88 = iLow(Symbol(), PERIOD_M5, iLowest(Symbol(), PERIOD_M5, MODE_LOW, gi_252, gi_236));
   double ld_96 = iHigh(Symbol(), PERIOD_M15, iHighest(Symbol(), PERIOD_M15, MODE_HIGH, gi_260, gi_236 + 1));
   double ld_104 = iLow(Symbol(), PERIOD_M15, iLowest(Symbol(), PERIOD_M15, MODE_LOW, gi_260, gi_236 + 1));
   double ld_112 = iHigh(Symbol(), PERIOD_M15, iHighest(Symbol(), PERIOD_M15, MODE_HIGH, gi_260, gi_236));
   double ld_120 = iLow(Symbol(), PERIOD_M15, iLowest(Symbol(), PERIOD_M15, MODE_LOW, gi_260, gi_236));
   double ld_128 = iHigh(Symbol(), PERIOD_M30, iHighest(Symbol(), PERIOD_M30, MODE_HIGH, gi_268, gi_236 + 1));
   double ld_136 = iLow(Symbol(), PERIOD_M30, iLowest(Symbol(), PERIOD_M30, MODE_LOW, gi_268, gi_236 + 1));
   double ld_144 = iHigh(Symbol(), PERIOD_M30, iHighest(Symbol(), PERIOD_M30, MODE_HIGH, gi_268, gi_236));
   double ld_152 = iLow(Symbol(), PERIOD_M30, iLowest(Symbol(), PERIOD_M30, MODE_LOW, gi_268, gi_236));
   double ld_160 = iHigh(Symbol(), PERIOD_H1, iHighest(Symbol(), PERIOD_H1, MODE_HIGH, gi_276, gi_236 + 1));
   double ld_168 = iLow(Symbol(), PERIOD_H1, iLowest(Symbol(), PERIOD_H1, MODE_LOW, gi_276, gi_236 + 1));
   double ld_176 = iHigh(Symbol(), PERIOD_H1, iHighest(Symbol(), PERIOD_H1, MODE_HIGH, gi_276, gi_236));
   double ld_184 = iLow(Symbol(), PERIOD_H1, iLowest(Symbol(), PERIOD_H1, MODE_LOW, gi_276, gi_236));
   double ld_192 = iHigh(Symbol(), PERIOD_H4, iHighest(Symbol(), PERIOD_H4, MODE_HIGH, gi_284, gi_236 + 1));
   double ld_200 = iLow(Symbol(), PERIOD_H4, iLowest(Symbol(), PERIOD_H4, MODE_LOW, gi_284, gi_236 + 1));
   double ld_208 = iHigh(Symbol(), PERIOD_H4, iHighest(Symbol(), PERIOD_H4, MODE_HIGH, gi_284, gi_236));
   double ld_216 = iLow(Symbol(), PERIOD_H4, iLowest(Symbol(), PERIOD_H4, MODE_LOW, gi_284, gi_236));
   double ld_224 = iHigh(Symbol(), PERIOD_D1, iHighest(Symbol(), PERIOD_D1, MODE_HIGH, gi_292, gi_236 + 1));
   double ld_232 = iLow(Symbol(), PERIOD_D1, iLowest(Symbol(), PERIOD_D1, MODE_LOW, gi_292, gi_236 + 1));
   double ld_240 = iHigh(Symbol(), PERIOD_D1, iHighest(Symbol(), PERIOD_D1, MODE_HIGH, gi_292, gi_236));
   double ld_248 = iLow(Symbol(), PERIOD_D1, iLowest(Symbol(), PERIOD_D1, MODE_LOW, gi_292, gi_236));
   double ld_256 = iHigh(Symbol(), PERIOD_W1, iHighest(Symbol(), PERIOD_W1, MODE_HIGH, gi_300, gi_236 + 1));
   double ld_264 = iLow(Symbol(), PERIOD_W1, iLowest(Symbol(), PERIOD_W1, MODE_LOW, gi_300, gi_236 + 1));
   double ld_272 = iHigh(Symbol(), PERIOD_W1, iHighest(Symbol(), PERIOD_W1, MODE_HIGH, gi_300, gi_236));
   double ld_280 = iLow(Symbol(), PERIOD_W1, iLowest(Symbol(), PERIOD_W1, MODE_LOW, gi_300, gi_236));
   bool li_288 = TRUE;
   bool li_292 = TRUE;
   bool li_296 = FALSE;
   bool li_300 = FALSE;
   if ((gi_352 && iBands(NULL, PERIOD_M1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_M1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL,
      PERIOD_M1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL, PERIOD_M1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_356 && iBands(NULL, PERIOD_M5,
      20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_M5, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_M5, 20, 2, 0, PRICE_CLOSE,
      MODE_UPPER, gi_236) < iBands(NULL, PERIOD_M5, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_360 && iBands(NULL, PERIOD_M15, 20, 2, 0, PRICE_CLOSE, MODE_LOWER,
      gi_236) > iBands(NULL, PERIOD_M15, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_M15, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL,
      PERIOD_M15, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_364 && iBands(NULL, PERIOD_M30, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_M30,
      20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_M30, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL, PERIOD_M30, 20, 2, 0, PRICE_CLOSE,
      MODE_UPPER, gi_236 + 1)) || (gi_368 && iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER,
      gi_236 + 1) && iBands(NULL, PERIOD_H1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL, PERIOD_M15, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_372 &&
      iBands(NULL, PERIOD_H4, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_H4, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_H4,
      20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL, PERIOD_H4, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_376 && iBands(NULL, PERIOD_D1, 20, 2,
      0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL, PERIOD_D1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_D1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER,
      gi_236) < iBands(NULL, PERIOD_D1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236 + 1)) || (gi_380 && iBands(NULL, PERIOD_W1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236) > iBands(NULL,
      PERIOD_W1, 20, 2, 0, PRICE_CLOSE, MODE_LOWER, gi_236 + 1) && iBands(NULL, PERIOD_W1, 20, 2, 0, PRICE_CLOSE, MODE_UPPER, gi_236) < iBands(NULL, PERIOD_W1, 20, 2, 0,
      PRICE_CLOSE, MODE_UPPER, gi_236 + 1))) {
      li_288 = FALSE;
      li_292 = FALSE;
   }
   double ld_304 = Close[1];
   double ld_312 = 5.0 * gd_456;
   double ld_320 = 10.0 * gd_456;
   double ld_328 = 50.0 * gd_456;
   double ld_336 = 110.0 * gd_456;
   double ld_344 = iClose(NULL, PERIOD_H1, 1);
   double ld_352 = iClose(NULL, PERIOD_H1, 2);
   double ld_360 = iClose(NULL, PERIOD_H1, 3);
   double ld_368 = iClose(NULL, PERIOD_H1, 4);
   double ld_376 = iClose(NULL, PERIOD_H1, 5);
   double ld_384 = iClose(NULL, PERIOD_H1, 6);
   double ld_392 = iClose(NULL, PERIOD_H1, 7);
   double ld_400 = iClose(NULL, PERIOD_H1, 8);
   double ld_408 = iClose(NULL, PERIOD_H1, 9);
   double ld_416 = iClose(NULL, PERIOD_H1, 10);
   double ld_424 = iClose(NULL, PERIOD_H1, 11);
   double ld_432 = iClose(NULL, PERIOD_H1, 12);
   double ld_440 = iClose(NULL, PERIOD_H1, 13);
   double ld_448 = iOpen(NULL, PERIOD_H1, 1);
   double ld_456 = iOpen(NULL, PERIOD_H1, 2);
   double ld_464 = iOpen(NULL, PERIOD_H1, 3);
   double ld_472 = iOpen(NULL, PERIOD_H1, 4);
   double ld_480 = iOpen(NULL, PERIOD_H1, 5);
   double ld_488 = iOpen(NULL, PERIOD_H1, 6);
   double ld_496 = iOpen(NULL, PERIOD_H1, 7);
   double ld_504 = iOpen(NULL, PERIOD_H1, 8);
   double ld_512 = iOpen(NULL, PERIOD_H1, 9);
   double ld_520 = iOpen(NULL, PERIOD_H1, 10);
   double ld_528 = iOpen(NULL, PERIOD_H1, 11);
   double ld_536 = iOpen(NULL, PERIOD_H1, 12);
   double ld_544 = iOpen(NULL, PERIOD_H1, 13);
   double ld_552 = iHigh(NULL, PERIOD_H1, 1);
   double ld_560 = iHigh(NULL, PERIOD_H1, 2);
   double ld_568 = iHigh(NULL, PERIOD_H1, 3);
   double ld_576 = iHigh(NULL, PERIOD_H1, 4);
   double ld_584 = iHigh(NULL, PERIOD_H1, 5);
   double ld_592 = iHigh(NULL, PERIOD_H1, 6);
   double ld_600 = iHigh(NULL, PERIOD_H1, 7);
   double ld_608 = iHigh(NULL, PERIOD_H1, 8);
   double ld_616 = iHigh(NULL, PERIOD_H1, 9);
   double ld_624 = iHigh(NULL, PERIOD_H1, 10);
   double ld_632 = iHigh(NULL, PERIOD_H1, 11);
   double ld_640 = iHigh(NULL, PERIOD_H1, 12);
   double ld_648 = iHigh(NULL, PERIOD_H1, 13);
   double ld_656 = iLow(NULL, PERIOD_H1, 1);
   double ld_664 = iLow(NULL, PERIOD_H1, 2);
   double ld_672 = iLow(NULL, PERIOD_H1, 3);
   double ld_680 = iLow(NULL, PERIOD_H1, 4);
   double ld_688 = iLow(NULL, PERIOD_H1, 5);
   double ld_696 = iLow(NULL, PERIOD_H1, 6);
   double ld_704 = iLow(NULL, PERIOD_H1, 7);
   double ld_712 = iLow(NULL, PERIOD_H1, 8);
   double ld_720 = iLow(NULL, PERIOD_H1, 9);
   double ld_728 = iLow(NULL, PERIOD_H1, 10);
   double ld_736 = iLow(NULL, PERIOD_H1, 11);
   double ld_744 = iLow(NULL, PERIOD_H1, 12);
   double ld_752 = iLow(NULL, PERIOD_H1, 13);
   if ((gi_392 && ld_304 > ld_384 + 110.0 * gd_456) || (gi_396 && (ld_344 >= ld_352 && ld_344 >= ld_360 && ld_472 > ld_368 && ld_376 > ld_480 && ld_472 - ld_368 >= 50.0 * gd_456 &&
      ld_480 - ld_688 <= 5.0 * gd_456 && ld_576 - ld_472 <= 5.0 * gd_456) || (ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_384 - ld_488 < ld_376 - ld_480 && ld_376 - ld_480 < ld_368 - ld_472 && ld_368 - ld_472 > ld_360 - ld_464 && ld_360 - ld_464 < ld_352 - ld_456 && ld_352 - ld_456 < ld_344 - ld_448 && ld_360 - ld_464 < 4.0 * (ld_568 - ld_360) && ld_352 - ld_456 < 2.0 * (ld_560 - ld_352) && ld_552 < ld_560) ||
      (ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_376 - ld_480 < ld_368 - ld_472 && ld_368 - ld_472 < ld_360 - ld_464 &&
      ld_360 - ld_464 > ld_352 - ld_456 && ld_352 - ld_456 < ld_344 - ld_448 && ld_352 - ld_456 < 10.0 * (ld_560 - ld_352) && ld_344 - ld_448 < 2.0 * (ld_552 - ld_344)) ||
      (ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 < ld_448 && ld_376 - ld_480 > 110.0 * gd_456 && ld_376 - ld_480 > ld_368 - ld_472 &&
      ld_368 - ld_472 >= ld_360 - ld_464 && ld_360 - ld_464 < ld_352 - ld_456 && ld_584 > ld_576 && ld_584 > ld_568 && ld_584 > ld_560 && ld_584 > ld_552 && ld_560 > ld_552 &&
      ld_688 < ld_576 && ld_680 < ld_568 && ld_672 < ld_560 && ld_656 < ld_560) || (ld_360 > ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_360 - ld_464 <= 10.0 * gd_456 && ld_352 - ld_456 >= 50.0 * gd_456 && ld_568 < ld_560 && ld_560 < ld_552 && ld_464 - ld_672 <= 5.0 * gd_456 && ld_456 - ld_664 <= 5.0 * gd_456 && ld_448 - ld_656 <= 5.0 * gd_456) ||
      (ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_368 - ld_472 <= 10.0 * gd_456 && ld_360 - ld_464 >= 50.0 * gd_456 && ld_576 < ld_568 && ld_568 < ld_560 &&
      ld_472 - ld_680 <= 5.0 * gd_456 && ld_464 - ld_672 <= 5.0 * gd_456 && ld_456 - ld_664 <= 5.0 * gd_456 && ld_552 < ld_560) || (ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_376 - ld_480 <= 10.0 * gd_456 && ld_368 - ld_472 >= 50.0 * gd_456 && ld_584 < ld_576 && ld_576 < ld_568 && ld_480 - ld_688 <= 5.0 * gd_456 && ld_472 - ld_680 <= 5.0 * gd_456 && ld_464 - ld_672 <= 5.0 * gd_456 && ld_560 < ld_568 && ld_552 < ld_560) ||
      (ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_384 - ld_488 <= 10.0 * gd_456 && ld_376 - ld_480 >= 50.0 * gd_456 && ld_592 < ld_584 && ld_584 < ld_576 &&
      ld_488 - ld_696 <= 5.0 * gd_456 && ld_480 - ld_688 <= 5.0 * gd_456 && ld_472 - ld_680 <= 5.0 * gd_456 && ld_568 < ld_576 && ld_560 < ld_568 && ld_552 < ld_560) || (ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_392 - ld_496 <= 10.0 * gd_456 && ld_384 - ld_488 >= 50.0 * gd_456 && ld_600 < ld_592 && ld_592 < ld_584 && ld_496 - ld_704 <= 5.0 * gd_456 && ld_488 - ld_696 <= 5.0 * gd_456 && ld_480 - ld_688 <= 5.0 * gd_456 && ld_576 < ld_584 && ld_568 < ld_576 && ld_560 < ld_568 && ld_552 < ld_560) ||
      (ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 >= ld_456 && ld_344 < ld_448 && ld_712 < ld_704 &&
      ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 > ld_656 && ld_608 <= ld_600 && ld_600 < ld_592 && ld_592 > ld_584 &&
      ld_584 < ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 > ld_552) || (ld_392 > ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 < ld_448 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 < ld_656) ||
      (ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_608 > ld_600 && ld_600 < ld_592 &&
      ld_592 > ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 &&
      ld_672 < ld_664) || (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_616 > ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_720 > ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672) ||
      (ld_416 > ld_520 && ld_408 < ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_624 > ld_616 && ld_616 < ld_608 &&
      ld_608 > ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_728 > ld_720 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 &&
      ld_688 < ld_680) || (ld_392 < ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_464 > ld_360 && ld_456 > ld_352 && ld_344 > ld_448 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 >= ld_552 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 > ld_664 && ld_664 < ld_656 && ld_392 - ld_704 <= 5.0 * gd_456 && ld_384 - ld_696 <= 5.0 * gd_456 && ld_568 - ld_464 <= 5.0 * gd_456 && ld_560 - ld_456 <= 5.0 * gd_456 && ld_552 - ld_344 <= 5.0 * gd_456) ||
      (ld_400 < ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_472 > ld_368 && ld_464 > ld_360 && ld_352 > ld_456 && ld_608 < ld_600 && ld_600 > ld_592 &&
      ld_592 < ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 >= ld_560 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 > ld_672 &&
      ld_672 < ld_664 && ld_400 - ld_712 <= 5.0 * gd_456 && ld_392 - ld_704 <= 5.0 * gd_456 && ld_576 - ld_472 <= 5.0 * gd_456 && ld_568 - ld_464 <= 5.0 * gd_456 && ld_560 - ld_352 <= 5.0 * gd_456) ||
      (ld_408 < ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_480 > ld_376 && ld_472 > ld_368 && ld_360 > ld_464 && ld_616 < ld_608 && ld_608 > ld_600 &&
      ld_600 < ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 >= ld_568 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 > ld_680 &&
      ld_680 < ld_672 && ld_408 - ld_720 <= 5.0 * gd_456 && ld_400 - ld_712 <= 5.0 * gd_456 && ld_584 - ld_480 <= 5.0 * gd_456 && ld_576 - ld_472 <= 5.0 * gd_456 && ld_568 - ld_360 <= 5.0 * gd_456) ||
      (ld_416 < ld_520 && ld_408 < ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_488 > ld_384 && ld_480 > ld_376 && ld_368 > ld_472 && ld_624 < ld_616 && ld_616 > ld_608 &&
      ld_608 < ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 >= ld_576 && ld_728 > ld_720 && ld_720 > ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 &&
      ld_688 < ld_680 && ld_416 - ld_728 <= 5.0 * gd_456 && ld_408 - ld_720 <= 5.0 * gd_456 && ld_592 - ld_488 <= 5.0 * gd_456 && ld_584 - ld_480 <= 5.0 * gd_456 && ld_576 - ld_368 <= 5.0 * gd_456) ||
      (ld_416 > ld_520 && ld_512 > ld_408 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 &&
      ld_344 > ld_448 && ld_624 < ld_616 && ld_616 > ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 < ld_560 &&
      ld_560 < ld_552 && ld_728 > ld_720 && ld_720 < ld_712 && ld_712 < ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664 &&
      ld_664 < ld_656) || (ld_408 < ld_512 && ld_400 >= ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 <= ld_664 && ld_664 < ld_656) ||
      (ld_416 < ld_520 && ld_408 >= ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 &&
      ld_624 < ld_616 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_728 < ld_720 &&
      ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 <= ld_672 && ld_672 < ld_664) || (ld_416 > ld_520 && ld_408 > ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 < ld_448 && ld_624 < ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_728 < ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 > ld_656) ||
      (ld_408 >= ld_408 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 > ld_448 &&
      ld_616 > ld_608 && ld_608 >= ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 > ld_712 &&
      ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 < ld_656) || (ld_416 >= ld_416 && ld_408 < ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_624 > ld_616 && ld_616 >= ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_728 > ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664) ||
      (ld_408 > ld_512 && ld_400 >= ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 > ld_448 &&
      ld_616 >= ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 >= ld_552 && ld_720 < ld_712 &&
      ld_712 <= ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 <= ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 < ld_656) || (ld_416 > ld_520 && ld_408 >= ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_624 >= ld_616 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 >= ld_560 && ld_728 < ld_720 && ld_720 <= ld_712 && ld_712 < ld_704 && ld_704 < ld_696 && ld_696 <= ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 < ld_664) ||
      (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_344 > ld_448 &&
      ld_616 < ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 < ld_712 &&
      ld_712 < ld_704 && ld_704 <= ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 < ld_656) || (ld_416 > ld_520 && ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_624 < ld_616 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_728 < ld_720 && ld_720 < ld_712 && ld_712 <= ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 < ld_664) ||
      (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_344 > ld_448 &&
      ld_616 < ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 < ld_712 &&
      ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 < ld_656) || (ld_416 > ld_520 && ld_408 > ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_624 < ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_728 < ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664) ||
      (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 < ld_448 &&
      ld_616 > ld_608 && ld_608 > ld_600 && ld_600 >= ld_592 && ld_592 >= ld_584 && ld_584 >= ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 < ld_712 &&
      ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 > ld_656) || (ld_408 < ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 >= ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 <= ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 < ld_712 && ld_712 < ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 < ld_656))) li_288 = FALSE;
   if ((gi_392 && ld_304 < ld_384 - 110.0 * gd_456) || (gi_396 && (ld_376 > ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 > ld_448 && ld_376 - ld_480 > ld_368 - ld_472 &&
      ld_368 - ld_472 > ld_360 - ld_464 && ld_360 - ld_464 > ld_456 - ld_352 && ld_456 - ld_352 < ld_344 - ld_448) || (ld_384 > ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_344 > ld_448 && ld_384 - ld_488 > ld_376 - ld_480 && ld_376 - ld_480 > ld_368 - ld_472 && ld_368 - ld_472 > ld_464 - ld_360 && ld_464 - ld_360 < ld_352 - ld_456 && ld_352 - ld_456 <= ld_344 - ld_448) ||
      (ld_408 < ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 <= ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 < ld_448 &&
      ld_616 > ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 > ld_712 &&
      ld_712 < ld_704 && ld_704 < ld_696 && ld_696 <= ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 < ld_664 && ld_664 > ld_656) || (ld_416 < ld_520 && ld_408 < ld_512 && ld_400 > ld_504 && ld_392 <= ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_624 > ld_616 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_728 > ld_720 && ld_720 < ld_712 && ld_712 < ld_704 && ld_704 <= ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 > ld_664) ||
      (ld_424 < ld_528 && ld_416 < ld_520 && ld_408 > ld_512 && ld_400 <= ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 < ld_464 &&
      ld_632 > ld_624 && ld_624 < ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_736 > ld_728 &&
      ld_728 < ld_720 && ld_720 < ld_712 && ld_712 <= ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 > ld_672) || (ld_432 < ld_536 && ld_424 < ld_528 && ld_416 > ld_520 && ld_408 <= ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_640 > ld_632 && ld_632 < ld_624 && ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_744 > ld_736 && ld_736 < ld_728 && ld_728 < ld_720 && ld_720 <= ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680) ||
      (ld_440 < ld_544 && ld_432 < ld_536 && ld_424 > ld_528 && ld_416 <= ld_520 && ld_408 < ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 < ld_480 &&
      ld_648 > ld_640 && ld_640 < ld_632 && ld_632 > ld_624 && ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_752 > ld_744 &&
      ld_744 < ld_736 && ld_736 < ld_728 && ld_728 <= ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688) || (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 <= ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 >= ld_464 && ld_352 < ld_456 && ld_344 < ld_448 && ld_616 >= ld_608 && ld_608 <= ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 <= ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 <= ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 <= ld_656) ||
      (ld_408 >= ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 > ld_448 &&
      ld_616 > ld_608 && ld_608 >= ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 > ld_712 &&
      ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 < ld_656) || (ld_416 >= ld_520 && ld_408 < ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_624 > ld_616 && ld_616 >= ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_728 > ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664) ||
      (ld_408 < ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 < ld_448 &&
      ld_616 > ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 < ld_712 &&
      ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 > ld_664 && ld_664 > ld_656) || (ld_416 < ld_520 && ld_408 > ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_624 > ld_616 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_728 < ld_720 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 > ld_664) ||
      (ld_408 > ld_512 && ld_400 < ld_512 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 >= ld_448 &&
      ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 < ld_552 &&
      ld_720 < ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 >= ld_680 && ld_680 >= ld_672 && ld_672 < ld_664 && ld_664 <= ld_656) || (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 >= ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 > ld_448 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 <= ld_712 && ld_712 < ld_704 && ld_704 <= ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 > ld_656) ||
      (ld_416 > ld_520 && ld_408 > ld_512 && ld_400 < ld_504 && ld_392 >= ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 &&
      ld_624 < ld_616 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_728 <= ld_720 &&
      ld_720 < ld_712 && ld_712 <= ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 > ld_664) || (ld_424 > ld_528 && ld_416 > ld_520 && ld_408 < ld_512 && ld_400 >= ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_632 < ld_624 && ld_624 < ld_616 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_736 <= ld_728 && ld_728 < ld_720 && ld_720 <= ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 > ld_672) ||
      (ld_432 > ld_536 && ld_424 > ld_528 && ld_416 < ld_520 && ld_408 >= ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 > ld_472 &&
      ld_640 < ld_632 && ld_632 < ld_624 && ld_624 < ld_616 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_744 <= ld_736 &&
      ld_736 < ld_728 && ld_728 <= ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 > ld_680) || (ld_408 < ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 >= ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 > ld_448 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 <= ld_576 && ld_576 <= ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 < ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 > ld_664 && ld_664 < ld_656) ||
      (ld_408 < ld_512 && ld_400 >= ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 > ld_448 &&
      ld_616 > ld_608 && ld_608 < ld_600 && ld_600 <= ld_592 && ld_592 <= ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_560 < ld_552 && ld_720 >= ld_712 &&
      ld_712 >= ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 < ld_656) || (ld_416 < ld_520 && ld_408 >= ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_624 > ld_616 && ld_616 < ld_608 && ld_608 <= ld_600 && ld_600 <= ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_728 >= ld_720 && ld_720 >= ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 < ld_664) ||
      (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 >= ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 > ld_448 &&
      ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 > ld_712 &&
      ld_712 <= ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 > ld_664 && ld_664 < ld_656) || (ld_416 > ld_520 && ld_408 < ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 >= ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 > ld_456 && ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_728 > ld_720 && ld_720 <= ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 < ld_664) ||
      (ld_424 > ld_528 && ld_416 < ld_520 && ld_408 > ld_512 && ld_400 < ld_504 && ld_392 >= ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 &&
      ld_632 > ld_624 && ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_736 > ld_728 &&
      ld_728 <= ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672) || (ld_432 > ld_536 && ld_424 < ld_528 && ld_416 > ld_520 && ld_408 < ld_512 && ld_400 >= ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_640 > ld_632 && ld_632 > ld_624 && ld_624 > ld_616 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_744 > ld_736 && ld_736 <= ld_728 && ld_728 > ld_720 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680) ||
      (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 <= ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 > ld_448 &&
      ld_616 < ld_608 && ld_608 <= ld_600 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 < ld_712 && ld_712 > ld_704 &&
      ld_704 < ld_696 && ld_696 <= ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 > ld_664 && ld_664 < ld_656) || (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 < ld_456 && ld_344 > ld_448 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 >= ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 <= ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 >= ld_664 && ld_664 > ld_656) ||
      (ld_416 > ld_520 && ld_408 < ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 < ld_464 && ld_352 > ld_456 &&
      ld_624 < ld_616 && ld_616 > ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 >= ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_728 < ld_720 &&
      ld_720 > ld_712 && ld_712 <= ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 >= ld_672 && ld_672 > ld_664) || (ld_424 > ld_528 && ld_416 < ld_520 && ld_408 > ld_512 && ld_400 > ld_504 && ld_392 > ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_632 < ld_624 && ld_624 > ld_616 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 >= ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_736 < ld_728 && ld_728 > ld_720 && ld_720 <= ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 >= ld_680 && ld_680 > ld_672) ||
      (ld_432 > ld_536 && ld_424 < ld_528 && ld_416 > ld_520 && ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 &&
      ld_640 < ld_632 && ld_632 > ld_624 && ld_624 < ld_616 && ld_616 < ld_608 && ld_608 >= ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_744 < ld_736 &&
      ld_736 > ld_728 && ld_728 <= ld_720 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 >= ld_688 && ld_688 > ld_680) || (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 >= ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 >= ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 < ld_448 && ld_616 > ld_608 && ld_608 >= ld_600 && ld_600 >= ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 > ld_552 && ld_720 > ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 > ld_656) ||
      (ld_416 > ld_520 && ld_408 < ld_512 && ld_400 >= ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 >= ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 < ld_456 &&
      ld_624 > ld_616 && ld_616 >= ld_608 && ld_608 >= ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 > ld_560 && ld_728 > ld_720 &&
      ld_720 < ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664) || (ld_408 < ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 < ld_448 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 >= ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 > ld_568 && ld_568 >= ld_560 && ld_560 > ld_552 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 > ld_656) ||
      (ld_408 < ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 > ld_488 && ld_376 < ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 < ld_448 &&
      ld_616 < ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 < ld_712 &&
      ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 > ld_672 && ld_672 < ld_664 && ld_664 > ld_656) || (ld_408 > ld_512 && ld_400 > ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 > ld_456 && ld_344 <= ld_448 && ld_616 < ld_608 && ld_608 < ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 >= ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 > ld_552 && ld_720 < ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 > ld_680 && ld_680 < ld_672 && ld_672 < ld_664 && ld_664 > ld_656) ||
      (ld_408 > ld_512 && ld_400 < ld_504 && ld_392 < ld_496 && ld_384 < ld_488 && ld_376 < ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 >= ld_448 &&
      ld_616 > ld_608 && ld_608 > ld_600 && ld_600 > ld_592 && ld_592 > ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_568 < ld_560 && ld_560 < ld_552 && ld_720 < ld_712 &&
      ld_712 > ld_704 && ld_704 > ld_696 && ld_696 > ld_688 && ld_688 >= ld_680 && ld_680 >= ld_672 && ld_672 < ld_664 && ld_664 <= ld_656) || (ld_408 < ld_512 && ld_400 < ld_504 && ld_392 <= ld_496 && ld_384 <= ld_488 && ld_376 >= ld_480 && ld_368 > ld_472 && ld_360 > ld_464 && ld_352 < ld_456 && ld_344 > ld_448 && ld_616 > ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 > ld_584 && ld_584 < ld_576 && ld_576 < ld_568 && ld_568 > ld_560 && ld_560 < ld_552 && ld_720 > ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 > ld_688 && ld_688 < ld_680 && ld_680 < ld_672 && ld_672 > ld_664 && ld_664 < ld_656) ||
      (ld_416 < ld_520 && ld_408 < ld_512 && ld_400 <= ld_504 && ld_392 <= ld_496 && ld_384 >= ld_488 && ld_376 > ld_480 && ld_368 > ld_472 && ld_360 < ld_464 && ld_352 > ld_456 &&
      ld_624 > ld_616 && ld_616 > ld_608 && ld_608 < ld_600 && ld_600 > ld_592 && ld_592 < ld_584 && ld_584 < ld_576 && ld_576 > ld_568 && ld_568 < ld_560 && ld_728 > ld_720 &&
      ld_720 > ld_712 && ld_712 < ld_704 && ld_704 > ld_696 && ld_696 < ld_688 && ld_688 < ld_680 && ld_680 > ld_672 && ld_672 < ld_664) || (ld_424 < ld_528 && ld_416 < ld_520 && ld_408 <= ld_512 && ld_400 <= ld_504 && ld_392 >= ld_496 && ld_384 > ld_488 && ld_376 > ld_480 && ld_368 < ld_472 && ld_360 > ld_464 && ld_632 > ld_624 && ld_624 > ld_616 && ld_616 < ld_608 && ld_608 > ld_600 && ld_600 < ld_592 && ld_592 < ld_584 && ld_584 > ld_576 && ld_576 < ld_568 && ld_736 > ld_728 && ld_728 > ld_720 && ld_720 < ld_712 && ld_712 > ld_704 && ld_704 < ld_696 && ld_696 < ld_688 && ld_688 > ld_680 && ld_680 < ld_672))) li_292 = FALSE;
   if (LotsOptimized) Lots = NormalizeDouble(AccountBalance() / 1000.0 * MinimumLotSize * RiskPercent, lotdigits);
   if (Lots < MinimumLotSize) Lots = MinimumLotSize;
   if (Lots > MaximumLotSize) Lots = MaximumLotSize;
   if (gi_184 == 1 && TimeCurrent() - gi_408 < Period() || TimeCurrent() - gi_412 < Period()) gi_528 = 1;
   bool li_760 = FALSE;
   bool li_764 = FALSE;
   if (gi_240 == FALSE || (gi_240 && ld_48 > ld_32) && gi_248 == FALSE || (gi_248 && ld_80 > ld_64) && gi_256 == FALSE || (gi_256 && ld_112 > ld_96) && gi_264 == FALSE ||
      (gi_264 && ld_144 > ld_128) && gi_272 == FALSE || (gi_272 && ld_176 > ld_160) && gi_280 == FALSE || (gi_280 && ld_208 > ld_192) && gi_288 == FALSE || (gi_288 && ld_240 > ld_224) && gi_296 == FALSE ||
      (gi_296 && ld_272 > ld_256) && li_288) {
      if (gi_176) li_764 = TRUE;
      else li_760 = TRUE;
   }
   if (gi_240 == FALSE || (gi_240 && ld_56 < ld_40) && gi_248 == FALSE || (gi_248 && ld_88 < ld_72) && gi_256 == FALSE || (gi_256 && ld_120 < ld_104) && gi_264 == FALSE ||
      (gi_264 && ld_152 < ld_136) && gi_272 == FALSE || (gi_272 && ld_184 < ld_168) && gi_280 == FALSE || (gi_280 && ld_216 < ld_200) && gi_288 == FALSE || (gi_288 && ld_248 < ld_232) && gi_296 == FALSE ||
      (gi_296 && ld_280 < ld_264) && li_292) {
      if (gi_176) li_760 = TRUE;
      else li_764 = TRUE;
   }
   if (gi_524 != Bars) {
      gi_528 = 0;
      gi_524 = Bars;
   }
   if ((gi_172 && li_764) || li_296) {
      for (gi_504 = gi_532 - 1; gi_504 >= 0; gi_504--) {
         OrderSelect(gi_504, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_BUY) OrderClose(OrderTicket(), OrderLots(), Bid, slippage * gd_456);
      }
   }
   if ((gi_172 && li_760) || li_300) {
      for (gi_508 = gi_532 - 1; gi_508 >= 0; gi_508--) {
         OrderSelect(gi_508, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_SELL) OrderClose(OrderTicket(), OrderLots(), Ask, slippage * gd_456);
      }
   }
   if (gi_336) {
      for (gi_512 = gi_532 - 1; gi_512 >= 0; gi_512--) {
         OrderSelect(gi_512, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_BUY && TimeCurrent() - OrderOpenTime() >= 60 * gi_340) OrderClose(OrderTicket(), OrderLots(), Bid, slippage * gd_456);
      }
      for (gi_516 = gi_532 - 1; gi_516 >= 0; gi_516--) {
         OrderSelect(gi_516, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_SELL && TimeCurrent() - OrderOpenTime() >= 60 * gi_340) OrderClose(OrderTicket(), OrderLots(), Ask, slippage * gd_456);
      }
   }
   if (HideStopLoss) {
      for (gi_512 = gi_532 - 1; gi_512 >= 0; gi_512--) {
         OrderSelect(gi_512, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_BUY && gi_188 > 0 && Bid < OrderOpenPrice() - gi_188 * gd_456) OrderClose(OrderTicket(), OrderLots(), Bid, slippage * gd_456);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_SELL && gi_196 > 0 && Ask > OrderOpenPrice() + gi_196 * gd_456) OrderClose(OrderTicket(), OrderLots(), Ask, slippage * gd_456);
      }
   }
   if (HideTarget) {
      for (gi_516 = gi_532 - 1; gi_516 >= 0; gi_516--) {
         OrderSelect(gi_516, SELECT_BY_POS, MODE_TRADES);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_BUY && gi_192 > 0 && Bid > OrderOpenPrice() + gi_192 * gd_456) OrderClose(OrderTicket(), OrderLots(), Bid, slippage * gd_456);
         if (OrderSymbol() == Symbol() && OrderMagicNumber() == magic && OrderType() == OP_SELL && gi_200 > 0 && Ask < OrderOpenPrice() - gi_200 * gd_456) OrderClose(OrderTicket(), OrderLots(), Ask, slippage * gd_456);
      }
   }
   if ((gi_316 == FALSE && DayOfWeek() == 0) || (MondayFilter && DayOfWeek() == 1 && (!(Hour() >= MondayStartHour + GMTOffset))) || (gi_328 && DayOfWeek() == 5 && (!(Hour() < gi_332 +
      GMTOffset)))) return (0);
   if (f0_1(OP_BUY, magic) + f0_1(OP_SELL, magic) < gi_180) {
      if (li_760 && gi_528 < gi_184 && IsTradeAllowed()) {
         while (IsTradeContextBusy()) Sleep(3000);
         if (HideStopLoss == FALSE && gi_188 > 0) gd_440 = Ask - gi_188 * gd_456;
         else gd_440 = 0;
         if (HideTarget == FALSE && gi_192 > 0) gd_448 = Ask + gi_192 * gd_456;
         else gd_448 = 0;
         RefreshRates();
         gi_536 = OrderSend(Symbol(), OP_BUY, Lots, Ask, slippage * gd_464, gd_440, gd_448, gs_80 + ". Magic: " + DoubleToStr(magic, 0), magic, 0, Blue);
         if (gi_536 <= 0) Print("Error Occured : " + f0_0(GetLastError()));
         else {
            gi_528++;
            Print("Order opened : " + Symbol() + " Buy @ " + Ask + " SL @ " + gd_440 + " TP @" + gd_448 + " ticket =" + gi_536);
         }
      }
      if (li_764 && gi_528 < gi_184 && IsTradeAllowed()) {
         while (IsTradeContextBusy()) Sleep(3000);
         if (HideStopLoss == FALSE && gi_196 > 0) gd_440 = Bid + gi_196 * gd_456;
         else gd_440 = 0;
         if (HideTarget == FALSE && gi_200 > 0) gd_448 = Bid - gi_200 * gd_456;
         else gd_448 = 0;
         RefreshRates();
         gi_536 = OrderSend(Symbol(), OP_SELL, Lots, Bid, slippage * gd_464, gd_440, gd_448, gs_80 + ". Magic: " + DoubleToStr(magic, 0), magic, 0, Red);
         if (gi_536 <= 0) Print("Error Occured : " + f0_0(GetLastError()));
         else {
            gi_528++;
            Print("Order opened : " + Symbol() + " Sell @ " + Ask + " SL @ " + gd_440 + " TP @" + gd_448 + " ticket =" + gi_536);
         }
      }
   }
   return (0);
}

int f0_1(int ai_0, int ai_4) {
   int li_8 = 0;
   for (int li_12 = 0; li_12 < OrdersTotal(); li_12++) {
      OrderSelect(li_12, SELECT_BY_POS, MODE_TRADES);
      if (OrderSymbol() == Symbol() && OrderType() == ai_0 && OrderMagicNumber() == ai_4 || ai_4 == 0) li_8++;
   }
   return (li_8);
}

string f0_0(int ai_0) {
   string ls_4;
   switch (ai_0) {
   case 0:
   case 1:
      ls_4 = "no error";
      break;
   case 2:
      ls_4 = "common error";
      break;
   case 3:
      ls_4 = "invalid trade parameters";
      break;
   case 4:
      ls_4 = "trade server is busy";
      break;
   case 5:
      ls_4 = "old version of the client terminal";
      break;
   case 6:
      ls_4 = "no connection with trade server";
      break;
   case 7:
      ls_4 = "not enough rights";
      break;
   case 8:
      ls_4 = "too frequent requests";
      break;
   case 9:
      ls_4 = "malfunctional trade operation";
      break;
   case 64:
      ls_4 = "account disabled";
      break;
   case 65:
      ls_4 = "invalid account";
      break;
   case 128:
      ls_4 = "trade timeout";
      break;
   case 129:
      ls_4 = "invalid price";
      break;
   case 130:
      ls_4 = "invalid stops";
      break;
   case 131:
      ls_4 = "invalid trade volume";
      break;
   case 132:
      ls_4 = "market is closed";
      break;
   case 133:
      ls_4 = "trade is disabled";
      break;
   case 134:
      ls_4 = "not enough money";
      break;
   case 135:
      ls_4 = "price changed";
      break;
   case 136:
      ls_4 = "off quotes";
      break;
   case 137:
      ls_4 = "broker is busy";
      break;
   case 138:
      ls_4 = "requote";
      break;
   case 139:
      ls_4 = "order is locked";
      break;
   case 140:
      ls_4 = "long positions only allowed";
      break;
   case 141:
      ls_4 = "too many requests";
      break;
   case 145:
      ls_4 = "modification denied because order too close to market";
      break;
   case 146:
      ls_4 = "trade context is busy";
      break;
   case 4000:
      ls_4 = "no error";
      break;
   case 4001:
      ls_4 = "wrong function pointer";
      break;
   case 4002:
      ls_4 = "array index is out of range";
      break;
   case 4003:
      ls_4 = "no memory for function call stack";
      break;
   case 4004:
      ls_4 = "recursive stack overflow";
      break;
   case 4005:
      ls_4 = "not enough stack for parameter";
      break;
   case 4006:
      ls_4 = "no memory for parameter string";
      break;
   case 4007:
      ls_4 = "no memory for temp string";
      break;
   case 4008:
      ls_4 = "not initialized string";
      break;
   case 4009:
      ls_4 = "not initialized string in array";
      break;
   case 4010:
      ls_4 = "no memory for array\' string";
      break;
   case 4011:
      ls_4 = "too long string";
      break;
   case 4012:
      ls_4 = "remainder from zero divide";
      break;
   case 4013:
      ls_4 = "zero divide";
      break;
   case 4014:
      ls_4 = "unknown command";
      break;
   case 4015:
      ls_4 = "wrong jump (never generated error)";
      break;
   case 4016:
      ls_4 = "not initialized array";
      break;
   case 4017:
      ls_4 = "dll calls are not allowed";
      break;
   case 4018:
      ls_4 = "cannot load library";
      break;
   case 4019:
      ls_4 = "cannot call function";
      break;
   case 4020:
      ls_4 = "expert function calls are not allowed";
      break;
   case 4021:
      ls_4 = "not enough memory for temp string returned from function";
      break;
   case 4022:
      ls_4 = "system is busy (never generated error)";
      break;
   case 4050:
      ls_4 = "invalid function parameters count";
      break;
   case 4051:
      ls_4 = "invalid function parameter value";
      break;
   case 4052:
      ls_4 = "string function internal error";
      break;
   case 4053:
      ls_4 = "some array error";
      break;
   case 4054:
      ls_4 = "incorrect series array using";
      break;
   case 4055:
      ls_4 = "custom indicator error";
      break;
   case 4056:
      ls_4 = "arrays are incompatible";
      break;
   case 4057:
      ls_4 = "global variables processing error";
      break;
   case 4058:
      ls_4 = "global variable not found";
      break;
   case 4059:
      ls_4 = "function is not allowed in testing mode";
      break;
   case 4060:
      ls_4 = "function is not confirmed";
      break;
   case 4061:
      ls_4 = "send mail error";
      break;
   case 4062:
      ls_4 = "string parameter expected";
      break;
   case 4063:
      ls_4 = "integer parameter expected";
      break;
   case 4064:
      ls_4 = "double parameter expected";
      break;
   case 4065:
      ls_4 = "array as parameter expected";
      break;
   case 4066:
      ls_4 = "requested history data in update state";
      break;
   case 4099:
      ls_4 = "end of file";
      break;
   case 4100:
      ls_4 = "some file error";
      break;
   case 4101:
      ls_4 = "wrong file name";
      break;
   case 4102:
      ls_4 = "too many opened files";
      break;
   case 4103:
      ls_4 = "cannot open file";
      break;
   case 4104:
      ls_4 = "incompatible access to a file";
      break;
   case 4105:
      ls_4 = "no order selected";
      break;
   case 4106:
      ls_4 = "unknown symbol";
      break;
   case 4107:
      ls_4 = "invalid price parameter for trade function";
      break;
   case 4108:
      ls_4 = "invalid ticket";
      break;
   case 4109:
      ls_4 = "trade is not allowed";
      break;
   case 4110:
      ls_4 = "longs are not allowed";
      break;
   case 4111:
      ls_4 = "shorts are not allowed";
      break;
   case 4200:
      ls_4 = "object is already exist";
      break;
   case 4201:
      ls_4 = "unknown object property";
      break;
   case 4202:
      ls_4 = "object is not exist";
      break;
   case 4203:
      ls_4 = "unknown object type";
      break;
   case 4204:
      ls_4 = "no object name";
      break;
   case 4205:
      ls_4 = "object coordinates error";
      break;
   case 4206:
      ls_4 = "no specified subwindow";
      break;
   default:
      ls_4 = "unknown error";
   }
   return (ls_4);
}
